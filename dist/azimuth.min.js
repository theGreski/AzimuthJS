(function(c,d){"object"==typeof exports&&"undefined"!=typeof module?module.exports=d():"function"==typeof define&&define.amd?define(d):(c=c||self,c.azimuth=d())})(this,function(){function F(b){return b*(g/180)}function s(b){return b*(180/g)}function C(h,i,f,a){if(h===f&&i===a)return 0;const b=F(h),c=F(f);let d=F(a-i);const j=y(z(g/4+c/2)/z(g/4+b/2));x(d)>g&&(0<d?d=-(2*g-d):d=2*g+d);const k=w(d,j),l=(s(k)+360)%360;return l}function k(l,d,e,a){if(l===e&&d===a)return 0;const b=F(l),c=F(e),f=F(a-d),g=r(f)*v(c),h=v(b)*r(c)-r(b)*v(c)*v(f),i=w(g,h),j=(s(i)+360)%360;return j}function l(d,e){if(isNaN(d)||isNaN(e))throw new Error("Parameter is not a number!");if(0>d||360<d)throw new Error("Parameter outside of range!");if(1>e||3<e)throw new Error("Parameter outside of range!");const c=["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"];let a=4;2==e&&(a=8),3==e&&(a=16);const g=360/a,h=c.length/a;let i=u(d/g)*h;return i>=c.length&&(i=0),c[i]}function m(k,a,b,c){if(k===b&&a===c)return 0;const d=F(k),e=F(b),f=F(k-b),g=F(a-c),h=r(f/2)*r(f/2)+v(d)*v(e)*r(g/2)*r(g/2),i=2*w(t(h),t(1-h));return A*i}function n(h,b,d,a){if(h===d&&b===a)return 0;const c=F(h),e=F(d),f=F(h-d);let i=F(b-a);const l=y(z(g/4+e/2)/z(g/4+c/2)),k=1e-11<x(l)?f/l:v(c);x(i)>g&&(0<i?i=-(2*g-i):i=2*g+i);const m=t(f*f+k*k*i*i)*A;return m}function o(a,b="m"){if("m"===b)return a;switch(b){case"km":return .001*a;break;case"ft":return 3.28084*a;break;case"yd":return 1.0936*a;break;case"mi":return 621371e-9*a;break;case"nm":return 539957e-9*a;break;default:return a}}var b=Number.prototype,c=Math.PI,a=Math.tan,d=Math.log,e=Math.abs,f=Math.atan2,i=Math.sin,j=Math.cos,p=Math.round,q=Math.sqrt,t=q,u=p,v=j,r=i,w=f,x=e,y=d,z=a,g=c;const A=6371009;return b.round=function(a=0){const b=new Number(this.valueOf());return+(u(b+"e+"+a)+"e-"+a)},function(j,p,{units:g="m",distancePrecision:a=0,formula:b="great-circle",azimuthPrecision:c=0,directionPrecision:d=2}={}){if("undefined"==typeof j||"undefined"==typeof p)throw new Error("At least one point is missing!");if([j,p].forEach(b=>{if(!b.hasOwnProperty("lat")||!b.hasOwnProperty("lng"))throw new Error("Latitude/Longitude property missing!");if(isNaN(b.lat)||isNaN(b.lng))throw new Error("Latitude/Longitude property must be a number!");if(180<x(b.lat)||90<x(b.lng))throw new Error("Latitude/Longitude property exceeding maximal value!")}),!["m","km","ft","yd","mi","nm"].includes(g))throw new Error("Units parameter type not supported!");if(isNaN(a)||isNaN(c)||15<a||15<c)throw new Error("Precision parameter is not a number or exceeds it's maximum value of 15!");if(!["great-circle","rhumb-line"].includes(b))throw new Error("Calculation formula type parameter not supported!");if(![0,1,2,3,"0","1","2","3"].includes(d))throw new Error("Compass precision parameter not supported!");let e={};const f=o("rhumb-line"===b?n(j.lat,j.lng,p.lat,p.lng):m(j.lat,j.lng,p.lat,p.lng),g).round(a);e.distance=f,e.units=g;const h=0===f?"":("rhumb-line"===b?C(j.lat,j.lng,p.lat,p.lng):k(j.lat,j.lng,p.lat,p.lng)).round(c);return e.azimuth=h,e.formula=b,0!=d&&(e.direction=0===f?"":l(h,d)),e}});